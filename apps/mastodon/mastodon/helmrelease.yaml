---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mastodon
  namespace: flux-system
spec:
  releaseName: mastodon
  targetNamespace: mastodon
  install:
    createNamespace: true
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://github.com/mastodon/mastodon/tree/main/chart
      chart: ./
      version: 2.3.0
      sourceRef:
        kind: GitRepository
        name: mastodon
        namespace: flux-system
      interval: 15m
  values:
    replicaCount: 1
    mastodon:
      # create an initial administrator user; the password is autogenerated and will
      # have to be reset
      createAdmin:
        enabled: false

      cron:
        # run `tootctl media remove` every week
        removeMedia:
          enabled: true
          schedule: "0 0 * * 0"
      # available locales: https://github.com/mastodon/mastodon/blob/main/config/application.rb#L71
      locale: en
      local_domain: corgis.social
      persistence:
        assets:
          # ReadWriteOnce is more widely supported than ReadWriteMany, but limits
          # scalability, since it requires the Rails and Sidekiq pods to run on the
          # same node.
          accessMode: ReadWriteOnce
          storageClassName: linode-block-storage-retain
          resources:
            requests:
              storage: 10Gi
        system:
          accessMode: ReadWriteOnce
          storageClassName: linode-block-storage-retain
          resources:
            requests:
              storage: 10Gi
      s3:
        enabled: true
        # you can also specify the name of an existing Secret
        # with keys AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
        existingSecret: "mastodon-secrets"
        bucket: "assets.corgis.social"
        endpoint: "https://us-east-1.linodeobjects.com"
        hostname: "assets.corgis.social.us-east-1.linodeobjects.com"
        region: "US"
        s3_alias_host: "assets.corgis.social"
      # these must be set manually; autogenerated keys are rotated on each upgrade
      secrets:
        existingSecret: "mastodon-secrets"
      sidekiq:
        concurrency: 25
      smtp:
        auth_method: plain
        ca_file: /etc/ssl/certs/ca-certificates.crt
        delivery_method: smtp
        domain: corgis.social
        enable_starttls: 'auto'
        from_address: notifications@corgis.social
        openssl_verify_mode: peer
        port: 465
        reply_to: noreply@corgis.social
        server: smtp.sendgrid.net
        tls: true
        # you can also specify the name of an existing Secret
        # with the keys login and password
        existingSecret: mastodon-email-secrets
      streaming:
        port: 4000
        # this should be set manually since os.cpus() returns the number of CPUs on
        # the node running the pod, which is unrelated to the resources allocated to
        # the pod by k8s
        workers: 1
        # The base url for streaming can be set if the streaming API is deployed to
        # a different domain/subdomain.
        # base_url: wws://streaming.example.com
      web:
        port: 3000
    
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 40m
      hosts:
        - host: corgis.social
          paths:
            - path: '/'
      tls:
        - secretName: tls-corgis.social
          hosts:
            - corgis.social
    
    # https://github.com/bitnami/charts/tree/master/bitnami/elasticsearch#parameters
    elasticsearch:
      # `false` will disable full-text search
      #
      # if you enable ES after the initial install, you will need to manually run
      # RAILS_ENV=production bundle exec rake chewy:sync
      # (https://docs.joinmastodon.org/admin/optional/elasticsearch/)
      enabled: true
      image:
        tag: 7

    postgresql:
      enabled: false
      postgresqlHostname: "lin-11911-3296-pgsql-primary-private.servers.linodedb.net"
      postgresqlPort: 5432
      auth:
        database: mastodon
        username: mastodon
        existingSecret: "mastodon-secrets"
    
    # https://github.com/bitnami/charts/tree/master/bitnami/redis#parameters
    redis:
      # with a key of redis-password set to the password you want
      auth:
        existingSecret: "mastodon-secrets"
    
    service:
      type: ClusterIP
      port: 80
    
    externalAuth:
      oidc:
        enabled: false
      saml:
        enabled: false
      oauth_global:
        oauth_redirect_at_sign_in: false
      cas:
        enabled: false
      pam:
        enabled: false
      ldap:
        enabled: false
    
    # https://github.com/mastodon/mastodon/blob/main/Dockerfile#L75
    #
    # if you manually change the UID/GID environment variables, ensure these values
    # match:
    podSecurityContext:
      runAsUser: 991
      runAsGroup: 991
      fsGroup: 991
    
    securityContext: {}
    
    serviceAccount:
      create: true
    
    podAnnotations: {}
    
    jobAnnotations: {}
    
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
        # cpu: 1
        # memory: 3Gi
    
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
    
    nodeSelector: {}
    
    tolerations: []
    
    affinity: {}
